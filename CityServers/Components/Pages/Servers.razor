@page "/servers"
@inject NavigationManager NavigationManager

<h3>Servers</h3>
<br />
<br />
<div class="container-fluid text-center">
    <div class="row justify-content-center">
        @foreach (var city in cities)
        {
            <div class="col-auto mb-3">
                <!-- col-auto for at tilpasse bredde til indhold -->
                <div class="card" style="width: 200px;">
                    <!-- Fast bredde på kortet -->
                    <img src="@($"/images/{city}.png")" class="card-img-top" style="height: 120px; object-fit: cover;" alt="@city"> <!-- Juster højden på billedet -->
                    <div class="card-body">
                        <button type="button" class="btn btn-primary w-100">@city</button> <!-- Gør knappen bredde til 100% af kortet -->
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<br />

    <ServerComponent @rendermode="InteractiveServer"></ServerComponent>

<ul>
    @foreach (var server in servers)
    {
        <li>
            @server.Name in @server.City is
            <span style="color:@((server.IsOnline ? "green" : "red"))">
                @(server.IsOnline ? "online" : "offline")
            </span>
            &nbsp;
            <a href="/servers/@server.ServerId" class="btn btn-link">Edit</a>
           
            <EditForm
                Model="server"
                FormName="@($"form-Server-{server.ServerId}")"
                OnValidSubmit="@(() => { DeleteServer(server.ServerId); })">
                <button type="submit" class="btn btn-link">Delete</button>
            </EditForm>
        </li>
    }
</ul>
<p>
    <a href="/servers/add" class="btn btn-primary">Add server</a>
</p>
@code {
    private List<Server> servers = ServersRepository.GetServers();
    private List<string> cities = CityRepository.GetCities();

    private void DeleteServer(int serverId)
    {
        if(serverId > 0)
        {
         ServersRepository.DeleteServer(serverId);
         NavigationManager.NavigateTo("/servers");
        }
    }
}
